<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>x_snc_coe.AuditJobUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>AuditJobUtil</name>
        <script><![CDATA[var AuditJobUtil = Class.create();
AuditJobUtil.prototype = {
    initialize: function() {},

    /*
     * @Description: Check the value of the property
     * @param: The CoE table name
     * @return: (Boolean)
     */
    checkTableForAuditCoE: function(tableName) {
        var CoeTables = JSON.parse(gs.getProperty("x_snc_coe.available_for_coe"));
        for (var i = 0; i < CoeTables[0].tagForAttachment.length; i++) {
            if (CoeTables[0].tagForAttachment[i] == tableName) {
                return true;
            }
        }
        return false;
    },
    /*
     * @Description: Checks if the record is present in the label_entry table
     * @param: {SysID}
     */
    deleteLabelIfPresent: function(id) {
        var lbl = new GlideAggregate("label_entry");
        lbl.addQuery("table_key", id);
        lbl.addAggregate("COUNT");
        lbl.query();
        lbl.next();
        if ((lbl.getAggregate("COUNT") > 0)) {
            this.deleteLabelRecord(id);
        }
    },
    /*
     * @Description: Deletes record present in the label_entry table
     * @param: {SysID}
     */
    deleteLabelRecord: function(jobId) {

        var lbl = new GlideRecord("label_entry");
        lbl.addQuery("table_key", jobId);
        lbl.query();
        if (lbl.next()) {
            lbl.deleteRecord();
        }
    },

    /*
     * @Description: Creates record in the label_entry table
     * @param: {Table name, SysID}
     */
    createLabelRecord: function(tableName, id) {
        var gr = new GlideRecord(tableName);
        if (gr.get(id)) {
            var le = new GlideRecord("label_entry");
            le.initialize();
            le.title = "Job" + " " + "-" + " " + gr.number;
            le.table = gr.sys_class_name;
            le.table_key = id;
            le.read = "yes";
            le.label = gs.getProperty("x_snc_coe.label_new_attachment");
            if (!le.insert()) {
                gs.info("Error: AuditJobUtil:createLabelRecord: Label entry insert failed");
            }
        } else {
            gs.info("Error: AuditJobUtil:createLabelRecord: Job record not found");
        }
    },
	
	/* 
 * @Description: Fetches the previous value of the field
 * @param: Object GlideRecord object of the record
 * @param: String Field name for which previous value is required
 * @return: String Old Value of the field
 */
previousHistoryRecord: function(jb, fieldhistory) {

    var grset = new GlideRecord('sys_history_set');
    grset.addQuery('id', jb.sys_id);
    grset.query();
    if (grset.next()) {

        var grhistory = new GlideRecord('sys_history_line');
        grhistory.addQuery('set', grset.sys_id);
        grhistory.addQuery('field', fieldhistory);
        grhistory.orderByDesc('update_time');
        grhistory.query();
        if (grhistory.next()) {
            return grhistory.old_value;
        }
    }



},
    type: 'AuditJobUtil'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>piyushkumar1@kpmg.com</sys_created_by>
        <sys_created_on>2020-12-10 15:05:44</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>20919a301b492810d1807b46464bcb74</sys_id>
        <sys_mod_count>37</sys_mod_count>
        <sys_name>AuditJobUtil</sys_name>
        <sys_package display_value="Audit CoE" source="x_snc_coe">60a5ae6b1b7850103fa411fc2d4bcbe5</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Audit CoE">60a5ae6b1b7850103fa411fc2d4bcbe5</sys_scope>
        <sys_update_name>sys_script_include_20919a301b492810d1807b46464bcb74</sys_update_name>
        <sys_updated_by>sufiyankalaniya@kpmg.com</sys_updated_by>
        <sys_updated_on>2021-02-12 09:11:09</sys_updated_on>
    </sys_script_include>
</record_update>
